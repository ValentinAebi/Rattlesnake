
package Test {

    fn testFunc(xs: arr Double, action: String) -> Double {
        return
        when action == "min" then Arrays.arrayMin(xs)
        else when action == "max" then Arrays.arrayMax(xs)
        else Error.error("unknown action " + action)
    }

}

package Error {

    fn error(msg: String) -> Nothing {
        panic msg
    }

}

package Arrays {

    fn arrayMax(xs: arr Double) -> Double {
        if #xs == 0 {
            panic "max of empty array"
        };
        var max = xs[0];
        for var idx = 1; idx < #xs; idx += 1 {
            max = MinMax.max(max, xs[idx])
        };
        return when #xs == 0 then Error.error("") else max
    }

    fn arrayMin(xs: arr Double) -> Double {
        if #xs == 0 {
            panic "min of empty array"
        };
        var min = xs[0];
        for var idx = 1; idx < #xs; idx += 1 {
            min = MinMax.min(min, xs[idx])
        };
        return min
    }

}

package MinMax {

    fn min(a: Double, b: Double) -> Double {
        return when b < a then b else a
    }

    fn max(a: Double, b: Double) -> Double {
        return when b > a then b else a
    }

}
