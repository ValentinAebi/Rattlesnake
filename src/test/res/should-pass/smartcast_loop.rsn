
interface List {}

struct NonEmpty : List {
    head: Int,
    tail: List
}

struct Empty : List {}


fn arrayToList(a: arr Int) -> List {
    var ls: List = new Empty {};
    for var i = #a-1; i >= 0; i -= 1 {
        ls = new NonEmpty { a[i], ls };
    };
    return ls;
}

fn listToString(ls: List) -> String {
    var str = "[ ";
    for var rem = ls; rem is NonEmpty; rem = rem.tail {
        str += rem.head + " ";
    };
    str += "]";
    return str;
}

fn testF(xs: arr Int) -> String {
    val ls = arrayToList(xs);
    return listToString(ls);
}
